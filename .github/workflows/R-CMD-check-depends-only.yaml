on:
  push:
    branches:
      - master
      - develop
      - release**
  pull_request:
    branches:
      - master
      - develop
      - release**

name: R-CMD-check-depends-only

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) - Depends Only

    strategy:
      fail-fast: false
      matrix:
        config:
        # Define a new configu that will run R CMD check with _R_CHECK_DEPENDS_ONLY_ set
        - { os: macOS-latest,   r: 'release', vdiffr: false }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # Runs vdiffr test only on the latest version of R
      VDIFFR_RUN_TESTS: ${{ matrix.config.vdiffr }}
      VDIFFR_LOG_PATH: "../vdiffr.Rout.fail"

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      # To install vdiffr, these three libraries/tools are needed:
      # - freetype (already installed, needed by systemfonts)
      # - cairo (not installed, needed by gdtools)
      # - pkg-config (not installed, needed to set proper build settings)
      - name: Install pkg-config and cairo on macOS
        if: runner.os == 'macOS'
        run: brew install pkg-config cairo

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies (Depends Only)
        run: |
          remotes::install_deps(dependencies = NA)
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("knitr")  # Also install knitr to allow rebuilding of vignettes
          remotes::install_cran("rmarkdown")  # rmarkdown is required for knitr to work
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check (Depends Only)
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _R_CHECK_DEPENDS_ONLY_: true
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--no-build-vignettes"), build_args = c("--no-build-vignettes"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
